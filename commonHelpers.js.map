{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst input = document.querySelector('#datetime-picker');\nconst buttonStart = document.querySelector('[data-start]');\nconst daySpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nbuttonStart.setAttribute('disabled', 'true');\n\nlet userSelectedDate;\nlet intervalId;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n  },\n};\n\nflatpickr(input, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\ninput.addEventListener('change', () => {\n  const newDate = new Date(input.value);\n\n  if (newDate < new Date()) {\n    iziToast.error({\n      message: 'Please choose a date in the future',\n      timeout: 3000,\n      position: 'topRight',\n    });\n    buttonStart.setAttribute('disabled', 'true');\n  } else {\n    buttonStart.removeAttribute('disabled');\n  }\n});\n\nbuttonStart.addEventListener('click', () => {\n  buttonStart.setAttribute('disabled', 'true');\n  input.setAttribute('disabled', 'true');\n  intervalId = setInterval(() => {\n    const ms = userSelectedDate - new Date();\n    const { days, hours, minutes, seconds } = convertMs(ms);\n\n    if (ms <= 0) {\n      clearInterval(intervalId);\n      return;\n    }\n\n    daySpan.textContent = addLeadingZero(days);\n    hoursSpan.textContent = addLeadingZero(hours);\n    minutesSpan.textContent = addLeadingZero(minutes);\n    secondsSpan.textContent = addLeadingZero(seconds);\n  }, 1000);\n});\n"],"names":["input","buttonStart","daySpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","intervalId","options","selectedDates","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","iziToast"],"mappings":"+IAIA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DJ,EAAY,aAAa,WAAY,MAAM,EAE3C,IAAIK,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,EAClC,CACH,EAEAC,EAAUV,EAAOQ,CAAO,EAExB,SAASG,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEAlB,EAAM,iBAAiB,SAAU,IAAM,CACrB,IAAI,KAAKA,EAAM,KAAK,EAEtB,IAAI,MAChBmB,EAAS,MAAM,CACb,QAAS,qCACT,QAAS,IACT,SAAU,UAChB,CAAK,EACDlB,EAAY,aAAa,WAAY,MAAM,GAE3CA,EAAY,gBAAgB,UAAU,CAE1C,CAAC,EAEDA,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,aAAa,WAAY,MAAM,EAC3CD,EAAM,aAAa,WAAY,MAAM,EACrCO,EAAa,YAAY,IAAM,CAC7B,MAAMK,EAAKN,EAAmB,IAAI,KAC5B,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EAEtD,GAAIA,GAAM,EAAG,CACX,cAAcL,CAAU,EACxB,MACD,CAEDL,EAAQ,YAAce,EAAeJ,CAAI,EACzCV,EAAU,YAAcc,EAAeH,CAAK,EAC5CV,EAAY,YAAca,EAAeF,CAAO,EAChDV,EAAY,YAAcY,EAAeD,CAAO,CACjD,EAAE,GAAI,CACT,CAAC"}